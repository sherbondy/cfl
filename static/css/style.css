@charset "UTF-8";
/* Borders
---------------------------------------------------------------------------*/
/* Transitions
---------------------------------------------------------------------------*/
/* Button Styles
---------------------------------------------------------------------------*/
/* Fonts
---------------------------------------------------------------------------*/
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, figcaption, figure, footer, header, hgroup, menu, nav, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* base
================================================================= */
/* Box model
----------------------------------------------------------------- */
*,
*:before,
*:after {
  box-sizing: border-box; }

.test {
  transform: translateX(50%); }

/* HTML5 display definitions
----------------------------------------------------------------- */
/* Correct `block` display not defined in IE 6/7/8/9 and Firefox 3. */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/* Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3. */
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1; }

/* Prevent modern browsers from displaying `audio` without controls. Remove excess height in iOS 5 devices. */
audio:not([controls]) {
  display: none;
  height: 0; }

/* Address styling not present in IE 7/8/9, Firefox 3, and Safari 4. Known issue:no IE 6 support. */
[hidden] {
  display: none !important; }

/* Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11. */
figure {
  margin: 0;
  font-size: 0; }

/* Base
----------------------------------------------------------------- */
/* 1. Correct text resizing oddly in IE 6/7 when body `font-size` is set using `em` units.
   2. Prevent iOS text size adjust after orientation change, without disabling user zoom.
   3. Normalize font rendering in Firefox */
html {
  background: #000000;
  font-size: 100%;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-osx-font-smoothing: gray;
  /* 3 */ }

/* Address `font-family` inconsistency between `textarea` and other form elements. */
html,
button,
input,
select,
textarea {
  font-family: inherit;
  resize: none; }

/* Address margins handled incorrectly in IE 6/7. */
body {
  margin: 0;
  font-size: 18px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  line-height: 1.55;
  color: #000000;
  background-color: #ffffff;
  -moz-font-feature-settings: "liga" on;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

section {
  margin: 0; }

/* Embedded content
----------------------------------------------------------------- */
/* 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.
   2. Improve image quality when scaled in IE 7. */
img {
  border: 0;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */ }

img,
a img,
object,
embed {
  max-width: 100%;
  height: auto; }

::-moz-selection {
  background: #0000FF;
  color: #ffffff; }

::selection {
  background: #0000FF;
  color: #ffffff; }

::-moz-selection {
  background: #0000FF;
  color: #ffffff; }

a {
  color: #0000FF;
  text-decoration: none;
  word-wrap: break-word;
  transition: all 0.2s cubic-bezier(0.645, 0.045, 0.355, 1); }

a:focus {
  outline: none; }

a:active,
a:hover {
  outline: 0;
  box-shadow: 0 -1px #000 inset; }

h1,
.h1 {
  font-size: 36px;
  letter-spacing: 0.03em;
  line-height: 1.15;
  margin: 0 0 27px 0; }

h2,
.h2 {
  font-size: 30px;
  letter-spacing: 0.03em;
  line-height: 1.15;
  margin: 0 0 25px 0; }

h3,
.h3 {
  font-size: 24px;
  letter-spacing: 0.03em;
  line-height: 1.3;
  margin: 0 0 25px 0; }

h4,
.h4 {
  font-size: 18px;
  line-height: 1.55;
  margin: 0 0 25px 0; }

h5,
.h5 {
  font-size: 18px;
  line-height: 1.55;
  margin: 0 0 25px 0; }

h6,
.h6 {
  font-size: 18px;
  line-height: 1.55;
  margin: 0 0 25px 0; }

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #000000;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-weight: 800; }

h1 small,
h2 small,
h3 small,
h4 small,
h5 small,
h6 small {
  font-size: .75em;
  font-weight: normal;
  color: #000000; }

hgroup {
  margin: 0 0 25px 0; }

hgroup h1,
hgroup h2,
hgroup h3,
hgroup h4,
hgroup h5,
hgroup h6,
hgroup p {
  margin: 0; }

abbr[title] {
  border-bottom: 1px dotted;
  cursor: help; }

b,
strong {
  font-weight: 800; }

blockquote {
  margin: 1em 40px; }

dfn {
  font-style: italic; }

hr {
  box-sizing: content-box;
  -moz-box-sizing: content-box;
  height: 0; }

mark {
  background: #ff0;
  color: #000; }

p,
pre {
  margin: 0; }

code,
kbd,
pre,
samp {
  font-family: "Source Code Pro", monospace;
  font-size: inherit; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

q {
  quotes: none; }

q:before,
q:after {
  content: '';
  content: none; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 18px;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

[hidden] {
  display: none !important; }

dl,
menu,
ol,
ul {
  margin: 0 0 25px 0; }

dd {
  margin: 0 0 0 40px; }

menu,
ol,
ul {
  padding: 0 0 0 40px; }

nav ul,
nav ol {
  list-style: none;
  list-style-image: none;
  margin: 0;
  padding: 0; }

nav li a {
  text-decoration: none; }

ul ul,
ul ol,
ol ul,
ol ol {
  margin: 0; }

code {
  font-size: .9em;
  color: #000000;
  background: rgba(0, 0, 0, 0.1);
  padding: 0.2em 0.4em;
  word-break: break-word; }

.code {
  margin: 30px 0;
  padding: 20px;
  background: rgba(0, 0, 0, 0.1);
  border: 1px solid #eeeeee;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch; }

.code + .code {
  margin-top: -15px; }

.code code {
  white-space: pre;
  word-wrap: normal;
  padding: 0;
  background: none; }

.highlight {
  background-color: rgba(0, 0, 0, 0.1); }

hr {
  display: block;
  height: 1px;
  border: 0;
  background: #000000;
  margin: 30px 0;
  padding: 0; }

/* Tables
----------------------------------------------------------------- */
/* 1. From normalize.css: removes most spacing between table cells. */
table {
  border-collapse: collapse;
  /* 1 */
  border-spacing: 0;
  /* 1 */
  empty-cells: show;
  border: 1px solid #000000;
  margin: 35px 0; }

table caption {
  padding: 0 0 10px;
  color: #000000;
  font-size: 18px;
  font-style: italic;
  text-align: center; }

table td,
table th {
  border-left: 1px solid #000000;
  border-width: 0 0 0 1px;
  margin: 0;
  padding: 0.5em 1em;
  font-size: inherit;
  overflow: visible;
  /*to make ths where the title is really long work*/ }

table th {
  border-bottom: 1px solid #000000; }

table td {
  background-color: transparent;
  vertical-align: top; }

table td:first-child,
table th:first-child {
  border-left-width: 0; }

table thead {
  background: rgba(0, 0, 0, 0.1);
  color: #000000;
  text-align: left;
  vertical-align: bottom; }

/* tables that use grid width classes */
table col[class*="col-"] {
  display: table-column;
  float: none; }

table td[class*="col-"],
table th[class*="col-"] {
  display: table-cell;
  float: none; }

/* Striped tables
----------------------------------------------------------------- */
/* nth-child selector for modern browsers, otherwise apply .u-odd class to markup */
.table-striped tr:nth-child(2n-1) td,
.u-odd td {
  background-color: rgba(0, 0, 0, 0.1); }

/* Bordered tables
----------------------------------------------------------------- */
.table-bordered td {
  border-bottom: 1px solid #000000; }

.table-bordered tbody > tr:last-child td,
.table-horizontal tbody > tr:last-child td {
  border-bottom-width: 0; }

/* Horizontal tables
----------------------------------------------------------------- */
.table-horizontal td,
.table-horizontal th {
  border-width: 0 0 1px 0;
  border-bottom: 1px solid #000000; }

.table-horizontal tbody > tr:last-child td {
  border-bottom-width: 0; }

/* Forms: Noemalize
----------------------------------------------------------------- */
/* 1. Correct margin displayed oddly in IE 6/7. */
form {
  margin: 0;
  /* 1 */
  /* burf */
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 18px; }

/* Define consistent border, margin, and padding. */
fieldset {
  border: 0;
  margin: 30px 0;
  padding: 0; }

/* 1. Correct text not wrapping in Firefox 3.
   2. Correct alignment displayed oddly in IE 6/7. */
legend {
  white-space: normal;
  /* 1 */
  *margin-left: -7px;
  /* 2 */
  /* burf */
  display: block;
  width: 100%;
  margin: 0 0 20px;
  padding: 0 0 4px;
  border: 1px solid #e5e5e5;
  border-width: 0 0 1px 0;
  font-weight: 700; }

label {
  /* burf */
  margin: 0.5em 0 0.2em; }

/* 1. Correct font size not being inherited in all browsers.
   2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5, and Chrome.
   3. Improve appearance and consistency in all browsers.  */
button,
input,
select,
textarea {
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */
  vertical-align: baseline;
  /* 3 */
  *vertical-align: middle;
  /* 3 */ }

/* Address Firefox 3+ setting `line-height` on `input` using ` !important` in the UA stylesheet. */
button,
input {
  line-height: normal; }

/* Address inconsistent `text-transform` inheritance for `button` and `select`. All other form control elements do not inherit `text-transform` values. Correct `button` style inheritance in Chrome, Safari 5+, and IE 6+. Correct `select` style inheritance in Firefox 4+ and Opera. */
button,
select {
  text-transform: none; }

/* 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls.
   2. Removed from normalize.css: "Correct inability to style clickable `input` types in iOS which added -webkit-appearance: button."
   3. Improve usability and consistency of cursor style between image-type `input` and others.
   4. Remove card spacing in IE 7 without affecting normal text inputs. Known issue:card spacing remains in IE 6.
   5. Remove WebKit default button business. */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  cursor: pointer;
  /* 3 */
  *overflow: visible;
  /* 4 */
  -webkit-appearance: none;
  /* 5 */ }

/* Re-set default cursor for disabled elements. */
button[disabled],
html input[disabled] {
  cursor: default; }

/* 1. Address box sizing set to content-box in IE 8/9.
   2. Remove excess padding in IE 8/9.
   3. Remove excess padding in IE 7. Known issue: excess padding remains in IE 6. */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
  *height: 13px;
  /* 3 */
  *width: 13px;
  /* 3 */
  margin-right: 4px; }

/* 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
   2. Removed from normalize.css (Address `box-sizing` set to `border-box` in Safari 5 and Chrome (include `-moz` to future-proof)). */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */ }

/* Remove card padding and search cancel button in Safari 5 and Chrome on OS X. */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/* Remove card padding and border in Firefox 3+. */
button::-moz-focus-card,
input::-moz-focus-card {
  border: 0;
  padding: 0; }

/* 1. Remove default vertical scrollbar in IE 6/7/8/9.
   2. Improve readability and alignment in all browsers. */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
  border: 1px solid #000; }

/* Forms: Style (adapted from Pure CSS v0.5.0)
----------------------------------------------------------------- */
.checkbox,
.radio {
  margin: 0.5em 0;
  display: block; }

select {
  border: 1px solid #ccc;
  background-color: white; }

select[multiple] {
  height: auto; }

.form-row {
  margin: 0 0 10px; }

.form-controls {
  margin: 20px 0 0; }

.required {
  color: #c00 !important; }

/* Form Stacked */
.form-stacked input[type="text"],
.form-stacked input[type="password"],
.form-stacked input[type="email"],
.form-stacked input[type="url"],
.form-stacked input[type="date"],
.form-stacked input[type="month"],
.form-stacked input[type="time"],
.form-stacked input[type="datetime"],
.form-stacked input[type="datetime-local"],
.form-stacked input[type="week"],
.form-stacked input[type="number"],
.form-stacked input[type="search"],
.form-stacked input[type="tel"],
.form-stacked input[type="color"],
.form-stacked select,
.form-stacked label,
.form-stacked textarea,
.form-aligned select,
.form-aligned label,
.form-aligned textarea {
  display: block;
  margin: 0.25em 0; }

/* Aligned Forms */
@media (max-width: 319px) {
  .form-aligned input,
  .form-aligned textarea,
  .form-aligned select {
    display: inline-block;
    *display: inline;
    *zoom: 1;
    vertical-align: middle; }
  .form-aligned textarea {
    vertical-align: top; }
  .form-aligned .form-row label {
    display: inline-block;
    width: 200px;
    margin: 0 20px 0 0;
    vertical-align: middle;
    text-align: right; }
  .form-aligned .form-row-checkbox,
  .form-aligned .form-row-radio {
    margin: 0 0 10px;
    margin-left: 220px; }
  .form-aligned .form-controls {
    margin-left: 220px; } }

/* buttons
----------------------------------------------------------------- */
.button, button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  /* Structure */
  display: inline-block;
  *display: inline;
  /*IE 6/7*/
  zoom: 1;
  line-height: normal;
  white-space: nowrap;
  vertical-align: baseline;
  text-align: center;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

/* Firefox: Get rid of the card focus border */
.button::-moz-focus-card, button::-moz-focus-card,
html input[type="button"]::-moz-focus-card,
input[type="reset"]::-moz-focus-card,
input[type="submit"]::-moz-focus-card {
  padding: 0;
  border: 0; }

.button, button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  font-size: 18px;
  *font-size: 90%;
  /*IE 6/7 - To reduce IE's oversized button text*/
  *overflow: visible;
  /*IE 6/7 - Because of IE's overly large left/right padding on buttons */
  padding: 0.6em 15px;
  color: #ffffff;
  background-color: #000000;
  text-decoration: none;
  border: none; }

.button:focus, button:focus,
html input[type="button"]:focus,
input[type="reset"]:focus,
input[type="submit"]:focus {
  outline: 0; }

.button-active,
.button:active,
button:active,
html input[type="button"]:active,
input[type="reset"]:active,
input[type="submit"]:active {
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.15) inset, 0 0 6px rgba(0, 0, 0, 0.2) inset; }

.button[disabled], button[disabled],
html input[disabled][type="button"],
input[disabled][type="reset"],
input[disabled][type="submit"],
.button-disabled,
.button-disabled:hover,
.button-disabled:focus,
.button-disabled:active {
  border: none;
  background-image: none;
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  filter: alpha(opacity=40);
  opacity: 0.40;
  cursor: not-allowed;
  box-shadow: none; }

.button-hidden {
  display: none; }

/* Firefox: Get rid of the card focus border */
.button::-moz-focus-card, button::-moz-focus-card,
html input[type="button"]::-moz-focus-card,
input[type="reset"]::-moz-focus-card,
input[type="submit"]::-moz-focus-card {
  padding: 0;
  border: 0; }

.button-primary,
.button-selected,
a.button-primary,
a.button-selected {
  background-color: #000000;
  color: #ffffff; }

/* Placeholder text */
::-webkit-input-placeholder {
  color: rgba(0, 0, 0, 0.4); }

:-moz-placeholder {
  /* Firefox 18- */
  color: rgba(0, 0, 0, 0.4); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: rgba(0, 0, 0, 0.4); }

:-ms-input-placeholder {
  color: rgba(0, 0, 0, 0.4); }

input:focus {
  outline: none; }

.nav {
  height: 114px;
  z-index: 1;
  background: #fff; }
  .js-nav-active .nav {
    position: fixed;
    top: 0;
    right: 0;
    left: 0; }
  @media (min-width: 768px) {
    .nav {
      position: fixed;
      top: 0;
      bottom: 0;
      left: 0;
      width: 320px;
      height: auto;
      border-right: 1px solid #000;
      overflow: scroll;
      padding-bottom: 53px; } }

.nav__width {
  position: relative;
  padding: 20px; }

.nav__logo__link {
  display: block;
  max-width: 250px; }
  .nav__logo__link:hover {
    box-shadow: none; }

.nav__trigger {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 110px;
  padding: 0 40px;
  background: #fff; }
  @media (min-width: 768px) {
    .nav__trigger {
      display: none; } }
  .nav__trigger:focus, .nav__trigger:active {
    box-shadow: none; }

.content-wrapper {
  padding: 20px;
  max-width: 1220px;
  margin: 0 auto;
  position: relative;
  background-color: #fff; }
  @media (min-width: 768px) {
    .content-wrapper {
      padding: 50px;
      margin-left: 320px; } }

.nav__trigger__icon {
  width: 100%;
  height: 3px;
  background: #000;
  display: block;
  position: relative; }
  .nav__trigger__icon:before, .nav__trigger__icon:after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: #000;
    content: '';
    display: block; }
  .nav__trigger__icon:before {
    transform: translateY(-250%); }
  .nav__trigger__icon:after {
    transform: translateY(250%); }

.hidden-nav {
  position: fixed;
  top: 114px;
  right: 0;
  bottom: 0;
  left: 100%;
  width: 100%;
  padding: 20px;
  background: #fff;
  z-index: 1;
  display: none; }
  .js-nav-active .hidden-nav {
    transform: translate3d(-100%, 0, 0);
    display: block; }
  @media (min-width: 768px) {
    .hidden-nav {
      position: static;
      left: 0;
      display: block; }
      .js-nav-active .hidden-nav {
        transform: translate3d(0, 0, 0); } }

.nav__block__title {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 13px;
  font-weight: 800;
  font-style: normal;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  margin: 0 0 5px;
  border-bottom: 1px solid; }

.nav__block__title-link {
  color: #000000; }
  .nav__block__title-link:hover {
    box-shadow: none;
    color: #000000; }

.nav__block {
  padding: 0 0 20px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 17px; }
  .nav__block:last-child {
    padding-bottom: 0; }

.nav__footer {
  position: fixed;
  right: 0;
  left: 0;
  bottom: 0;
  padding: 0 20px 12px;
  background: #fff; }
  @media (min-width: 768px) {
    .nav__footer {
      right: auto;
      width: 319px; } }

.nav__footer__width {
  display: block;
  position: relative;
  border-top: 1px solid #000;
  padding: 10px 0 0;
  overflow: hidden; }

.nav__footer__icon {
  float: left;
  margin-right: 15px; }
  .nav__footer__icon.nav__footer__icon--twitter .nav__footer__link {
    background-image: url("../img/icon--twitter.svg"); }
  .nav__footer__icon.nav__footer__icon--instagram .nav__footer__link {
    background-image: url("../img/icon--instagram.svg"); }
  .nav__footer__icon.nav__footer__icon--email .nav__footer__link {
    background-image: url("../img/icon--email.svg"); }
  .nav__footer__icon.nav__footer__icon--search .nav__footer__link {
    background-image: url("../img/icon--search.svg"); }

.primary-search {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.primary-search-input {
  position: absolute;
  top: -1px;
  right: 0;
  bottom: 0;
  width: 40px;
  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
  padding: 0 50px 0 10px;
  border: none;
  cursor: pointer; }
  .primary-search-input:focus {
    cursor: text;
    border: 1px solid;
    width: 100%; }

.submit--search {
  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
  pointer-events: none;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  height: auto;
  background: transparent;
  width: 40px; }
  .primary-search-input:focus + .submit--search {
    pointer-events: auto;
    opacity: 1; }

.submit--search {
  background-image: url("../img/icon--search.svg"); }

.submit--search {
  display: block;
  background-size: 25px;
  background-repeat: no-repeat;
  background-position: 50% 50%; }
  .submit--search:hover {
    box-shadow: none; }

.nav__footer__link {
  width: 30px;
  height: 30px;
  display: block;
  background-size: 25px;
  background-repeat: no-repeat;
  background-position: 50% 50%; }
  .nav__footer__link:hover {
    box-shadow: none; }

.nav__footer__icon--search {
  float: right;
  margin-right: 0; }

.footer {
  padding: 50px;
  background-color: #000;
  color: #fff;
  text-align: center; }
  @media (min-width: 768px) {
    .footer {
      margin-left: 320px; } }

.default-repeater {
  list-style: none;
  padding-left: 0;
  margin-bottom: 0; }

.default-repeater__item {
  padding: 0;
  border-bottom: 1px solid #000; }
  .default-repeater__item:last-of-type {
    border-bottom: 0; }

.default-repeater__title {
  cursor: pointer;
  line-height: 1.2;
  margin-bottom: 0;
  padding: 20px 0;
  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1); }

.default-repeater__content {
  display: none; }
  .js-repeater-is-open .default-repeater__content {
    display: block; }

.article-body {
  overflow: hidden; }
  .article-body > a {
    display: block;
    line-height: 0;
    margin-bottom: 10px; }
    .article-body > a img {
      width: 100%;
      max-width: none; }
    @media (min-width: 550px) {
      .article-body > a {
        margin-left: 20px;
        float: right;
        width: 50%;
        max-width: 410px; } }

.wdi_feed_info {
  display: none; }

.default-repeater__content > p, .article-body > p {
  overflow: visible;
  margin: 0 0 1em; }

.default-repeater__content .wp-caption, .article-body .wp-caption {
  margin-bottom: 20px; }
  .default-repeater__content .wp-caption.alignleft, .article-body .wp-caption.alignleft {
    float: left;
    margin-right: 20px; }
  .default-repeater__content .wp-caption.aligncenter, .article-body .wp-caption.aligncenter {
    margin-left: auto;
    margin-right: auto;
    display: inline-block; }
  .default-repeater__content .wp-caption.alignright, .article-body .wp-caption.alignright {
    float: right;
    margin-left: 20px; }
  .default-repeater__content .wp-caption .wp-caption-dd, .article-body .wp-caption .wp-caption-dd, .default-repeater__content .wp-caption .wp-caption-text, .article-body .wp-caption .wp-caption-text {
    position: relative;
    margin-top: 0;
    padding-top: 8px;
    text-align: left;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    font-size: 14px;
    font-weight: 700; }

.default-repeater__content .photo-credit-wrapper a, .article-body .photo-credit-wrapper a {
  display: block; }

.default-repeater__content .photo-credit-wrapper img, .article-body .photo-credit-wrapper img {
  display: block; }

.default-repeater__content .photo-credit-wrapper > .photo-credit, .article-body .photo-credit-wrapper > .photo-credit {
  top: auto;
  bottom: 0; }

.default-repeater__content img.aligncenter, .article-body img.aligncenter {
  margin: 0 auto;
  display: block; }

.default-repeater__content img.alignleft, .article-body img.alignleft {
  float: left;
  margin-right: 20px;
  margin-bottom: 10px; }

.default-repeater__content img.alignright, .article-body img.alignright {
  float: right;
  margin-left: 20px;
  margin-bottom: 10px; }

.default-repeater__content div.pullquote-right, .article-body div.pullquote-right {
  text-align: right; }

.default-repeater__content > h1, .article-body > h1, .default-repeater__content > h2, .article-body > h2, .default-repeater__content > h3, .article-body > h3, .default-repeater__content > h4, .article-body > h4, .default-repeater__content > h5, .article-body > h5, .default-repeater__content > h6, .article-body > h6, .default-repeater__content > p, .article-body > p, .default-repeater__content > ul, .article-body > ul, .default-repeater__content > ol, .article-body > ol, .default-repeater__content > blockquote, .article-body > blockquote {
  max-width: 650px;
  margin: 0 0 1em; }

.default-repeater__content > h1, .article-body > h1, .default-repeater__content > h2, .article-body > h2, .default-repeater__content > h3, .article-body > h3, .default-repeater__content > h4, .article-body > h4, .default-repeater__content > h5, .article-body > h5, .default-repeater__content > h6, .article-body > h6 {
  line-height: 1.15; }
  .default-repeater__content > h1:first-child, .article-body > h1:first-child, .default-repeater__content > h2:first-child, .article-body > h2:first-child, .default-repeater__content > h3:first-child, .article-body > h3:first-child, .default-repeater__content > h4:first-child, .article-body > h4:first-child, .default-repeater__content > h5:first-child, .article-body > h5:first-child, .default-repeater__content > h6:first-child, .article-body > h6:first-child {
    margin-top: 0; }

.default-repeater__content > ul, .article-body > ul, .default-repeater__content > ol, .article-body > ol, .default-repeater__content > ul ul, .article-body > ul ul, .default-repeater__content > ul ol, .article-body > ul ol, .default-repeater__content > ol ul, .article-body > ol ul, .default-repeater__content > ol ol, .article-body > ol ol {
  list-style-type: none;
  margin: 0 0 1em;
  padding-left: 30px; }

.default-repeater__content > ol, .article-body > ol {
  counter-reset: story-counter; }
  .default-repeater__content > ol li:before, .article-body > ol li:before {
    content: counter(story-counter) ". ";
    counter-increment: story-counter; }

.default-repeater__content > ul li:before, .article-body > ul li:before, .default-repeater__content > ol li:before, .article-body > ol li:before {
  color: #000000;
  display: inline-block;
  padding-right: 10px;
  margin-left: -35px;
  width: 35px;
  text-align: right; }

.default-repeater__content > ul li:before, .article-body > ul li:before {
  content: '•'; }

.default-repeater__content > ol ul li:before, .article-body > ol ul li:before, .default-repeater__content > ul ul li:before, .article-body > ul ul li:before {
  color: #000000; }

.default-repeater__content > ol ol, .article-body > ol ol, .default-repeater__content > ul ol, .article-body > ul ol, .default-repeater__content > ol ul, .article-body > ol ul, .default-repeater__content > ul ul, .article-body > ul ul {
  counter-reset: story-subcounter;
  margin-bottom: 0; }

.default-repeater__content > ol ol li:before, .article-body > ol ol li:before, .default-repeater__content > ul ol li:before, .article-body > ul ol li:before {
  content: counter(story-subcounter, lower-alpha) ". ";
  counter-increment: story-subcounter;
  color: #000000; }

.default-repeater__content > hr, .article-body > hr {
  border-bottom: 6px solid #000000;
  width: 25px;
  margin: 40px auto 45px; }
  @media (min-width: 750px) {
    .default-repeater__content > hr, .article-body > hr {
      margin: 55px auto 60px; } }

.default-repeater__content > blockquote, .article-body > blockquote {
  border-left: 3px solid  #888;
  padding-left: 15px;
  font-style: italic;
  color: #888;
  font-size: .98em;
  margin-bottom: 20px; }

.search-topper {
  background: #000000;
  padding: 50px 20px; }

.search-topper__form {
  max-width: 900px;
  margin: 0 auto;
  width: 100%;
  position: relative;
  font-size: 60px; }

.search-topper__input {
  border: 0;
  border-bottom: 2px solid #fff;
  background: transparent;
  color: #fff;
  display: block;
  width: 100%;
  padding-right: 20px; }

.search-topper__submit {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 2px; }

.tease {
  display: flex;
  max-width: 900px;
  margin: 0 auto; }
  @media (min-width: 1070px) {
    .tease {
      margin-bottom: 20px; } }
  .post-type-post .tease {
    margin-left: 0; }

.tease__inner {
  padding: 0 0 40px;
  width: 100%;
  overflow: hidden; }

@media (min-width: 1070px) {
  .tease__hgroup {
    width: 55%;
    float: right;
    padding-left: 20px; } }

.tease__overline {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 13px;
  font-weight: 800;
  font-style: normal;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  margin-bottom: 6px;
  display: inline-block; }
  .tease__overline:hover {
    box-shadow: none;
    color: #000000; }

.tease__hed {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 21px;
  letter-spacing: 0.03em;
  font-weight: 800;
  margin-bottom: 4px; }
  .tease__hed > a {
    color: #000000; }
  @media (min-width: 1070px) {
    .tease__hed {
      font-size: 30px;
      letter-spacing: 0.03em; } }

.tease__dek {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 15px; }
  @media (min-width: 1070px) {
    .tease__dek {
      font-size: 18px; } }

.tease__img-mod {
  position: relative;
  display: block;
  background-size: cover;
  background-position: 50% 50%;
  margin-bottom: 5px;
  overflow: hidden;
  box-shadow: 0 0 0 1px black inset;
  transition: all 0.2s cubic-bezier(0.645, 0.045, 0.355, 1); }
  @media (min-width: 1070px) {
    .tease__img-mod {
      width: 45%;
      float: left; } }
  .tease__img-mod:hover {
    box-shadow: 0 0 0 3px black inset; }
  .tease__img-mod:before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: block;
    pointer-events: none;
    content: '';
    opacity: 1;
    transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
    background: radial-gradient(#444, #222); }
  .tease__img-mod.tease__img-loaded:before {
    opacity: 0; }
  .tease__img-mod:after {
    display: block;
    pointer-events: none;
    content: '';
    position: relative;
    width: 100%;
    padding-top: 68%; }

.tease__img {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  opacity: 0; }

.article-topper {
  border-bottom: 1px solid #000;
  margin-bottom: 30px; }

.article-topper__hgroup {
  max-width: 1000px; }

.article-h1 {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 32px;
  letter-spacing: 0.03em;
  font-weight: 800;
  line-height: 1.05;
  margin: 0 0 8px -3px; }
  @media (min-width: 550px) {
    .article-h1 {
      font-size: 43px;
      letter-spacing: 0.03em; } }
  @media (min-width: 768px) {
    .article-h1 {
      font-size: 60px;
      letter-spacing: 0.03em; } }

.blog-meta {
  padding: 10px 0; }

.blog-author {
  font-weight: 800;
  text-transform: capitalize;
  margin-right: 10px; }

.article-content {
  max-width: 1220px;
  margin: 0 auto 50px;
  padding: 0 0 50px;
  border-bottom: 1px solid #000; }

.comments {
  max-width: 1220px;
  margin: 0 auto 40px; }

.comments__title {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  font-weight: 800;
  font-style: normal;
  letter-spacing: 0.05em;
  text-transform: uppercase; }

.comments__body {
  max-width: 650px; }

.comment-notes {
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  color: #888;
  transition: max-height 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), opacity 0.5s cubic-bezier(0.645, 0.045, 0.355, 1) 0.3s; }
  .js-comment-is-active .comment-notes {
    max-height: 120px;
    opacity: 1; }

.comment__content {
  max-width: 700px; }
  .comment__content > p {
    margin-bottom: .5em; }
    .comment__content > p:last-child {
      margin-bottom: 0; }

.comment__meta {
  margin-bottom: 5px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 18px;
  font-weight: 800; }

.comment__timestamp {
  font-weight: 400;
  letter-spacing: 0.02em;
  text-transform: uppercase;
  font-size: .78em; }

.comment__mod {
  padding: 20px 0;
  border-bottom: 1px solid #000; }
  .comment__mod:last-child {
    padding-bottom: 0;
    border-bottom: 0; }

.comment-form-comment {
  margin-bottom: 20px; }
  .comment-form-comment label {
    position: absolute;
    transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
    transform: translateX(10px);
    color: #888; }

.comment-reply-title {
  line-height: 1.7;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 23px;
  letter-spacing: 0.03em;
  margin-bottom: 5px; }

.comment-form textarea {
  height: 45px;
  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
  width: 100%;
  padding: 8px 12px;
  margin-top: 0px; }
  .comment-form textarea:focus {
    outline: none; }

.comment-form.js-comment-is-active textarea {
  margin-top: 37px;
  height: 120px; }

.comment-form.js-comment-is-active label {
  transform: translateX(0);
  color: #000;
  margin-top: 5px; }

.comment-form .form-submit {
  height: 0;
  overflow: hidden;
  opacity: 0; }
  .comment-form-url + .comment-form .form-submit {
    margin-left: 80px; }

.comment-form .comment-form-url + .form-submit {
  margin-left: 80px; }

.comment-form .submit {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 13px;
  font-weight: 800;
  font-style: normal;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  padding-bottom: 1em 15px; }

.comment-form.js-comment-is-active .form-submit {
  opacity: 1;
  height: 43px;
  transition: height 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), opacity 0.5s cubic-bezier(0.645, 0.045, 0.355, 1) 0.3s; }

.comment-form-author,
.comment-form-email,
.comment-form-url {
  height: 0;
  opacity: 0; }
  .comment-form-author label,
  .comment-form-email label,
  .comment-form-url label {
    display: inline-block;
    min-width: 80px;
    margin-top: .5em; }
  .js-comment-is-active .comment-form-author, .js-comment-is-active
  .comment-form-email, .js-comment-is-active
  .comment-form-url {
    opacity: 1;
    height: 53px;
    transition: height 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), opacity 0.5s cubic-bezier(0.645, 0.045, 0.355, 1) 0.3s; }
  .comment-form-author input,
  .comment-form-email input,
  .comment-form-url input {
    padding: 9px;
    border: 1px solid #000;
    width: calc(100% - 80px);
    float: right; }

.logged-in-as {
  margin-bottom: 13px; }

.related-posts {
  padding-top: 30px;
  border-top: 1px solid #000; }

.pagination__mod {
  border-top: 1px solid #000;
  overflow: hidden;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 13px;
  font-weight: 800;
  font-style: normal;
  letter-spacing: 0.05em;
  text-transform: uppercase; }

.pagination__list {
  list-style: none;
  margin: 0;
  padding: 10px 0;
  float: right; }

.pagination__item {
  display: inline-block; }

.pagination__link {
  padding: 2px 5px; }
  .pagination__link:hover {
    background: #0000FF;
    color: #fff; }

.pagination__link--active,
.pagination__link--active:hover {
  background: #000;
  color: #fff; }

.pagination__link--ellip {
  pointer-events: none; }

.page-content {
  max-width: 1220px;
  margin: 0 auto; }

.page-h1 {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 40px;
  letter-spacing: 0.03em;
  font-weight: 800;
  line-height: 1.05; }
  @media (min-width: 550px) {
    .page-h1 {
      font-size: 55px;
      letter-spacing: 0.03em;
      margin-left: -3px; } }
  @media (min-width: 768px) {
    .page-h1 {
      font-size: 72px;
      letter-spacing: 0.03em; } }
  @media (min-width: 1070px) {
    .page-h1 {
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
      font-size: 95px;
      letter-spacing: 0.03em;
      font-weight: 800; } }

@media (min-width: 768px) {
  .map-container {
    margin-left: 320px; } }

.map-container--index {
  height: 300px; }
  @media (min-width: 768px) {
    .map-container--index {
      margin-left: 320px;
      height: 400px; } }

.map-container--single {
  height: 200px; }
  @media (min-width: 768px) {
    .map-container--single {
      margin-left: 320px;
      height: 300px; } }

.location-topper {
  padding: 20px;
  background: #000; }
  @media (min-width: 768px) {
    .location-topper {
      padding: 50px;
      margin-left: 320px; } }
  .js-location-is-closed .location-topper {
    border-top: 5px solid red; }
  .js-location-is-open .location-topper {
    border-top: 5px solid #23c775; }

.location-address {
  color: #000000; }

.location-topper__title {
  color: #fff;
  margin-bottom: 0;
  padding-bottom: 5px;
  border-bottom: 1px solid #fff;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 26px;
  letter-spacing: 0.03em;
  font-weight: 800;
  line-height: 1.05;
  margin: 0 0 8px -3px; }
  @media (min-width: 768px) {
    .location-topper__title {
      font-size: 43px;
      letter-spacing: 0.03em; } }
  @media (min-width: 1070px) {
    .location-topper__title {
      font-size: 55px;
      letter-spacing: 0.03em; } }

.location-topper__twitter {
  color: #fff; }

.js-location-is-closed .location-topper__status {
  color: red; }

.js-location-is-open .location-topper__status {
  color: #23c775; }

.default-repeater__link--menu-more {
  display: block;
  color: #000000; }
  .default-repeater__link--menu-more:hover {
    box-shadow: none; }

.menu-info__hours {
  font-size: .85em;
  font-weight: 400; }

@media (min-width: 1070px) {
  .default-repeater__item--menu .default-repeater__content {
    margin-left: -50px; }
    .default-repeater__item--menu .default-repeater__content:after {
      content: "";
      display: table;
      clear: both; }
    .default-repeater__item--menu .default-repeater__content > * {
      float: left;
      padding-left: 50px;
      width: 50%; }
    .default-repeater__item--menu .default-repeater__content > *:nth-child(1n) {
      clear: none; }
    .default-repeater__item--menu .default-repeater__content > *:nth-child(2n + 1) {
      clear: both; } }

.menu__cat {
  margin-bottom: 30px; }

.menu__cat-title {
  background: #000;
  color: #fff;
  margin-bottom: 10px;
  padding: 6px;
  line-height: 1;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 15px;
  font-weight: 800;
  font-style: normal;
  letter-spacing: 0.025em;
  text-transform: uppercase; }

.menu-info__mod {
  display: inline-block; }

.menu-price {
  float: right; }

@media (min-width: 768px) {
  .menu-info__modal-title {
    font-size: 44px;
    letter-spacing: 0.03em; } }

@media (min-width: 1200px) {
  .menu-info__modal-title {
    font-size: 55px;
    letter-spacing: 0.03em; } }

.menu-info__modal {
  display: none;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  white-space: normal;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  color: #000;
  background: #fff;
  padding: 20px;
  overflow: scroll;
  text-align: left; }
  @media (min-width: 768px) {
    .menu-info__modal {
      padding: 50px;
      left: 320px; } }
  @media (min-width: 1070px) {
    .menu-info__modal {
      font-size: 19px; } }
  .modal-is-active .menu-info__modal {
    display: block; }

.menu__item {
  overflow: hidden;
  padding: 0 5px;
  font-size: 15px; }
  @media (min-width: 768px) {
    .menu__item {
      font-size: 17px; } }

.js-is-new {
  color: #23c775;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 13px;
  font-weight: 800;
  letter-spacing: 0.05em;
  text-transform: uppercase; }

.menu__item-name {
  width: calc(100% - 80px);
  display: block;
  line-height: 1.1;
  margin-bottom: 12px;
  float: left;
  font-weight: 600; }
  @media (min-width: 768px) {
    .menu__item-name {
      font-weight: 500; } }
  .js-is-not-available .menu__item-name {
    text-decoration: line-through; }

.more-info__title {
  display: block;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 13px;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  margin-top: 25px; }
  @media (min-width: 1070px) {
    .more-info__title {
      font-size: 15px; } }
  .more-info__title:first-child {
    margin-top: 0; }

.menu-img {
  margin-bottom: 20px; }
  @media (min-width: 1070px) {
    .menu-img {
      margin-bottom: 0;
      width: 45%;
      margin-left: 5%;
      float: right; } }

.menu-info__modal--width {
  max-width: 600px; }

.menu-info__trigger--close {
  position: fixed;
  right: 20px;
  top: 20px;
  transition: all 0.2s cubic-bezier(0.645, 0.045, 0.355, 1); }
  .menu-info__trigger--close:hover {
    background: #0000FF; }
  @media (min-width: 768px) {
    .menu-info__trigger--close {
      right: 50px;
      top: 50px; } }

.menu-info__trigger--open {
  padding: 0;
  width: 20px;
  height: 20px;
  font-size: 13px;
  border-radius: 50%;
  background: #eee;
  color: #000;
  transition: all 0.2s cubic-bezier(0.645, 0.045, 0.355, 1); }
  .menu-info__trigger--open:hover {
    background: #0000FF;
    color: #fff; }

.menu-info__trigger--close {
  font-size: 20px;
  width: 47px;
  padding-top: 11px;
  padding-bottom: 13px; }

.default-repeater__item--menu--hours .hours__list {
  list-style: none;
  padding-left: 0; }

.default-repeater__item--menu--hours .hours__item {
  overflow: hidden; }
  .default-repeater__item--menu--hours .hours__item:before {
    display: none; }

.default-repeater__item--menu--hours .hours__day {
  width: 50%;
  max-width: 140px;
  float: left;
  margin-bottom: 5px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  font-weight: 500;
  font-style: normal;
  letter-spacing: 0.025em;
  text-transform: uppercase; }

.default-repeater__item--menu--hours .hours__hours {
  width: 50%;
  float: left;
  margin-bottom: 5px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  font-weight: 500; }

.locations-mod {
  padding-left: 0;
  list-style: none; }
  @media (min-width: 550px) {
    .locations-mod {
      margin-left: -20px;
      display: flex;
      flex-wrap: wrap; }
      .locations-mod:after {
        content: "";
        display: table;
        clear: both; }
      .locations-mod > * {
        float: left;
        padding-left: 20px;
        width: 50%; }
      .locations-mod > *:nth-child(1n) {
        clear: none; }
      .locations-mod > *:nth-child(2n + 1) {
        clear: both; } }
  @media (min-width: 1070px) {
    .locations-mod {
      margin-left: -30px; }
      .locations-mod:after {
        content: "";
        display: table;
        clear: both; }
      .locations-mod > * {
        float: left;
        padding-left: 30px;
        width: 33.33333%; }
      .locations-mod > *:nth-child(1n) {
        clear: none; }
      .locations-mod > *:nth-child(3n + 1) {
        clear: both; } }

.location-item {
  margin-bottom: 30px;
  display: flex; }

.location-item-inner {
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  width: 100%; }

.location__title {
  color: #000000;
  margin-bottom: 3px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 18px;
  letter-spacing: 0; }
  .location-item--closed .location__title {
    color: #999; }
  .location__title > a {
    color: inherit; }

.location__title__distance {
  font-weight: 400; }

.location__status {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 14px;
  font-weight: 800;
  font-style: normal;
  letter-spacing: 0.025em;
  text-transform: uppercase; }
  .location-item--open .location__status {
    color: #23c775; }
  .location-item--closed .location__status {
    color: red; }

.locations-form__mod {
  padding: 20px;
  background: #F8F8F8;
  border-top: 1px solid #000;
  overflow: hidden; }
  @media (min-width: 768px) {
    .locations-form__mod {
      padding: 30px 50px;
      margin-left: 320px; } }
  .locations-form__mod form {
    max-width: 1120px; }

.location-form__select-mod {
  position: relative; }
  @media (min-width: 550px) {
    .location-form__select-mod {
      width: 50%;
      float: left;
      padding-right: 20px; } }
  @media (min-width: 1070px) {
    .location-form__select-mod:last-child {
      padding-left: 10px; } }
  .location-form__select-mod label {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    font-size: 14px;
    font-weight: 800;
    font-style: normal;
    letter-spacing: 0.025em;
    text-transform: uppercase; }
  .location-form__select-mod select {
    border: 0;
    background-color: transparent;
    box-shadow: none;
    border-radius: 0;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    width: calc(100% - 100px);
    border-bottom: 1px solid #000;
    float: right; }
    .location-form__select-mod select:focus {
      outline: 0; }
  .location-form__select-mod:after {
    display: block;
    content: '';
    position: absolute;
    right: 20px;
    bottom: 0;
    width: 30px;
    height: 30px;
    background-image: url("../img/icon--select.svg");
    background-repeat: no-repeat;
    background-position: 50% 50%;
    pointer-events: none; }

/*# sourceMappingURL=data:application/json;base64, */
